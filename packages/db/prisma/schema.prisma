generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Tier {
  FREE @map("free")
  PRO  @map("pro")
}

enum Role {
  MEMBER @map("member")
  ADMIN  @map("admin")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? // @db.Text
  access_token             String? // @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? // @db.Text
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  refresh_token_expires_in Int?

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  full_name     String?
  email         String?   @unique
  role          Role      @default(MEMBER)
  onboarded     Boolean   @default(false)
  emailVerified DateTime?
  image         String?
  lastLogin     DateTime?
  accounts      Account[]
  sessions      Session[]

  organizationId String?
  organization   Organization?  @relation(fields: [organizationId], references: [id])

  @@index([organizationId])
}

model Organization {
  id                    String                  @id @default(cuid())
  stripeCustomerId      String?
  name                  String
  website               String
  tier                  Tier                    @default(FREE)
  users                 User[]

  @@index([stripeCustomerId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
